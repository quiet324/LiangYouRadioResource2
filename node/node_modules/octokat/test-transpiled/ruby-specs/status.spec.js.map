{"version":3,"sources":["../../test/ruby-specs/status.spec.js"],"names":["require","client","LONG_TIMEOUT","window","it","describe","timeout","status","lastMessage","messages"],"mappings":";;AAAA;eACiCA,QAAQ,gBAAR,C;IAAzBC,M,YAAAA,M;IAAQC,Y,YAAAA,Y;;AAEhB,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,WAAW,IAAhD,EAAsD;AACpDC,KAAG,yDAAH,EAA8D,YAAY,CAAE,CAA5E;AACD,CAFD,MAEO;AACLC,WAAS,QAAT,EAAmB,YAAY;AAC7B,SAAKC,OAAL,CAAaJ,YAAb;;AAEAE,OAAG,mCAAH,EAAwC;AAAA,aAAMH,OAAOM,MAAP,EAAN;AAAA,KAAxC;;AAEAH,OAAG,gCAAH,EAAqC;AAAA,aAAMH,OAAOM,MAAP,CAAcC,WAAd,EAAN;AAAA,KAArC;;AAEA,WAAOJ,GAAG,yCAAH,EAA8C;AAAA,aAAMH,OAAOM,MAAP,CAAcE,QAAd,EAAN;AAAA,KAA9C,CAAP;AACD,GARD;AASD","file":"status.spec.js","sourceRoot":"./index.js","sourcesContent":["/* eslint-env mocha */\nconst { client, LONG_TIMEOUT } = require('../test-config')\n\nif (typeof window !== 'undefined' && window !== null) {\n  it('is skipping status tests in the browser because of CORS', function () {})\n} else {\n  describe('Status', function () {\n    this.timeout(LONG_TIMEOUT)\n\n    it('returns the current system status', () => client.status())\n\n    it('returns the last human message', () => client.status.lastMessage())\n\n    return it('returns the most recent status messages', () => client.status.messages())\n  })\n}\n"]}