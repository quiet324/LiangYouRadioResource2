'use strict';

/* eslint-env mocha */
var _require = require('chai'),
    expect = _require.expect;

var _require2 = require('../test-config'),
    client = _require2.client,
    LONG_TIMEOUT = _require2.LONG_TIMEOUT,
    test_repo = _require2.test_repo,
    test_github_login = _require2.test_github_login;

describe('Commit Comments', function () {
  this.timeout(LONG_TIMEOUT);

  it('returns a list of all commit comments', function () {
    return client.repos('sferik/rails_admin').comments.fetch();
  });

  it('returns a list of comments for a specific commit', function () {
    return client.repos('sferik/rails_admin').commits('629e9fd9d4df25528e84d31afdc8ebeb0f56fbb3').comments.fetch().then(function (_ref) {
      var items = _ref.items;
      return expect(items[0].user.login).to.equal('bbenezech');
    });
  });

  it('returns a single commit comment', function () {
    return client.repos('sferik/rails_admin').comments('861907').fetch().then(function (commit) {
      return expect(commit.user.login).to.equal('bbenezech');
    });
  });

  return context('with commit comment', function () {
    var _this = this;

    before(function () {
      return client.repos(test_repo).commits.fetch().then(function (_ref2) {
        var items = _ref2.items;

        _this.commit = items[0];
        return client.repos(test_repo).commits(_this.commit.sha).comments.create({ body: ':metal:\n:sparkles:\n:cake:' }).then(function (commitComment) {
          _this.commit_comment = commitComment;
        });
      });
    });

    after(function () {
      return _this.commit_comment.remove();
    });

    it('creates a commit comment', function () {
      return expect(_this.commit_comment.user.login).to.equal(test_github_login);
    });

    it('updates a commit comment', function () {
      return _this.commit_comment.update({ body: ':penguin:' }).then(null, function (err) {
        return console.error(err);
      }).then(function (updatedComment) {
        return expect(updatedComment.body).to.equal(':penguin:');
      });
    });

    return it('deletes a commit comment', function () {
      return _this.commit_comment.remove().then(function (result) {
        return expect(result).to.equal(true);
      });
    });
  });
});
//# sourceMappingURL=commit-comments.spec.js.map