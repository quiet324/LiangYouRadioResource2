{"version":3,"sources":["../../test/ruby-specs/contents.spec.js"],"names":["require","expect","client","LONG_TIMEOUT","test_repo","btoa","window","global","str","buffer","toString","Error","describe","timeout","it","repos","readme","read","then","contents","context","before","done","removeFile","content","console","log","config","sha","message","remove","fetch","add","err","response","commit","to","match","response2","updatedContent"],"mappings":"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","file":"contents.spec.js","sourceRoot":"./index.js","sourcesContent":["/* eslint-env mocha */\nconst { expect } = require('chai')\nconst { client, LONG_TIMEOUT, test_repo } = require('../test-config')\n\n// NodeJS does not have a btoa\nlet btoa = null\n\nif (typeof window !== 'undefined' && window !== null) {\n  btoa = window.btoa\n  // Use the `Buffer` if available (NodeJS)\n} else if (typeof global !== 'undefined' && global !== null) {\n  btoa = function (str) {\n    var buffer = new global['Buffer'](str, 'binary')\n    return buffer.toString('base64')\n  }\n} else {\n  throw new Error('Native btoa function or Buffer is missing')\n}\n\ndescribe('Contents', function () {\n  this.timeout(LONG_TIMEOUT)\n\n  it('returns the default readme', () =>\n    client.repos('octokit/octokit.rb').readme.read()\n    .then(function (readme) {})\n  )\n      // expect(readme.encoding).to.equal(\"base64\")\n      // expect(readme.type).to.equal(\"file\")\n\n  it('returns the contents of a file', () =>\n    client.repos('octokit/octokit.rb').contents('lib/octokit.rb').read()\n    .then(function (contents) {})\n  )\n      // expect(contents.encoding).to.equal(\"base64\")\n      // expect(contents.type).to.equal(\"file\")\n\n  // it \"returns the headers of the request\", ->\n  //   client.repos('octokit/octokit.rb').tarball('master').fetch()\n  //   .then(null, (err) -> console.log err)\n  //   .then (archive_link) ->\n  //     expect(archive_link).to.equal('https://codeload.github.com/octokit/octokit.rb/legacy.tar.gz/master')\n\n  return context('With a file', function () {\n    before(function (done) {\n      let removeFile = function (content) {\n        console.log('removing file')\n        let config = {\n          sha: content.sha,\n          message: 'Removing as prep for testing'\n        }\n        client.repos(test_repo).contents('test_create.txt').remove(config)\n        return done()\n      }\n\n      // If the file exists, remove it. Otherwise, done.\n      client.repos(test_repo).contents('test_create.txt').fetch()\n      /* eslint handle-callback-err: \"off\" */\n      .then(removeFile, err => done())\n\n      // In Mocha 3, if the returned value is a promise then it will complain that\n      // we have specified a done() callback _and_ returned a promise.\n      // So, since this test should always succeed even if there is no file (to delete)\n      // just return null so Mocha does not complain.\n      return null\n    })\n\n    it('creates repository contents at a path', () => {\n      let config = {\n        message: 'I am commit-ing',\n        content: btoa('Here be the content\\n')\n      }\n      return client.repos(test_repo).contents('test_create.txt').add(config)\n      .then(null, function (err) { console.log(err); throw new Error(err) })\n      .then(response => {\n        return expect(response.commit.sha).to.match(/[a-z0-9]{40}/)\n      })\n    })\n\n    it('updates repository contents at a path', () => {\n      // Prep work (from previous test)\n      let config = {\n        message: 'I am commit-ing',\n        content: btoa('Here be the content\\n')\n      }\n      return client.repos(test_repo).contents('test_create.txt').add(config)\n      .then(null, function (err) { console.log(err); throw new Error(err) })\n      .then(response => {\n        expect(response.commit.sha).to.match(/[a-z0-9]{40}/)\n\n        // Test Start\n        let config = {\n          sha: response.content.sha,\n          message: 'I am commit-ing',\n          content: btoa('Here be moar content')\n        }\n        return client.repos(test_repo).contents('test_create.txt').add(config)\n        .then(response2 => {\n          return expect(response2.commit.sha).to.match(/[a-z0-9]{40}/)\n        })\n      })\n    })\n\n    return it('deletes repository contents at a path', () => {\n      // Prep work (from previous test)\n      let config = {\n        message: 'I am commit-ing',\n        content: btoa('Here be the content\\n')\n      }\n      return client.repos(test_repo).contents('test_create.txt').add(config)\n      .then(null, function (err) { console.log(err); throw new Error(err) })\n      .then(response => {\n        expect(response.commit.sha).to.match(/[a-z0-9]{40}/)\n\n        // More prep work\n        let config = {\n          sha: response.content.sha,\n          message: 'I am commit-ing',\n          content: btoa('Here be moar content')\n        }\n        return client.repos(test_repo).contents('test_create.txt').add(config)\n        .then(response2 => {\n          let updatedContent = response2\n          expect(response2.commit.sha).to.match(/[a-z0-9]{40}/)\n\n          let config = {\n            sha: updatedContent.content.sha,\n            message: 'I am rm-ing'\n          }\n          return client.repos(test_repo).contents('test_create.txt').remove(config)\n          .then(function (response) {\n\n            // TODO: Assert that this succeeded. Maybe mocha is enough\n          })\n        })\n      })\n    })\n  })\n})\n\n// TODO: have a non-boolean form of remove()\n// expect(response.commit.sha).to match(/[a-z0-9]{40}/)\n"]}