{"version":3,"sources":["../../../src/plugins/fetch-all.js"],"names":["toQueryString","require","pushAll","target","source","Array","isArray","Error","push","apply","getMore","fetchable","requester","acc","cb","doStuff","err","results","items","fetchNextPage","obj","next_page_url","request","next_page","fetch","nextPageUrl","nextPage","module","exports","asyncVerbs","fetchAll","path","query"],"mappings":";;AAAA,IAAMA,gBAAgBC,QAAQ,wBAAR,CAAtB;;AAEA,IAAIC,UAAU,SAAVA,OAAU,CAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACtC,MAAI,CAACC,MAAMC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1B,UAAM,IAAIG,KAAJ,CAAU,2EAAV,CAAN;AACD;AACD,SAAOJ,OAAOK,IAAP,CAAYC,KAAZ,CAAkBN,MAAlB,EAA0BC,MAA1B,CAAP;AACD,CALD;;AAOA,IAAIM,UAAU,SAAVA,OAAU,CAAUC,SAAV,EAAqBC,SAArB,EAAgCC,GAAhC,EAAqCC,EAArC,EAAyC;AACrD,MAAIC,UAAU,SAAVA,OAAU,CAAUC,GAAV,EAAeC,OAAf,EAAwB;AACpC,QAAID,GAAJ,EAAS;AAAE,aAAOF,GAAGE,GAAH,CAAP;AAAgB;AAC3Bd,YAAQW,GAAR,EAAaI,QAAQC,KAArB;AACA,WAAOR,QAAQO,OAAR,EAAiBL,SAAjB,EAA4BC,GAA5B,EAAiCC,EAAjC,CAAP;AACD,GAJD;;AAMA,MAAI,CAACK,cAAcR,SAAd,EAAyBC,SAAzB,EAAoCG,OAApC,CAAL,EAAmD;AACjD,WAAOD,GAAG,IAAH,EAASD,GAAT,CAAP;AACD;AACF,CAVD;;AAYA;AACA,IAAIM,gBAAgB,SAAhBA,aAAgB,CAAUC,GAAV,EAAeR,SAAf,EAA0BE,EAA1B,EAA8B;AAChD,MAAI,OAAOM,IAAIC,aAAX,KAA6B,QAAjC,EAA2C;AACzCT,cAAUU,OAAV,CAAkB,KAAlB,EAAyBF,IAAIG,SAA7B,EAAwC,IAAxC,EAA8C,IAA9C,EAAoDT,EAApD;AACA,WAAO,IAAP;AACD,GAHD,MAGO,IAAIM,IAAIG,SAAR,EAAmB;AACxBH,QAAIG,SAAJ,CAAcC,KAAd,CAAoBV,EAApB;AACA,WAAO,IAAP;AACD,GAHM,MAGA,IAAI,OAAOM,IAAIK,WAAX,KAA2B,QAA/B,EAAyC;AAC9Cb,cAAUU,OAAV,CAAkB,KAAlB,EAAyBF,IAAIK,WAA7B,EAA0C,IAA1C,EAAgD,IAAhD,EAAsDX,EAAtD;AACA,WAAO,IAAP;AACD,GAHM,MAGA,IAAIM,IAAIM,QAAR,EAAkB;AACvBN,QAAIM,QAAJ,CAAaF,KAAb,CAAmBV,EAAnB;AACA,WAAO,IAAP;AACD,GAHM,MAGA;AACL,WAAO,KAAP;AACD;AACF,CAhBD;;AAkBA;AACAa,OAAOC,OAAP,GAAiB;AACfC,cAAY;AACVC,YADU,oBACAlB,SADA,EACWmB,IADX,EACiB;AAAE,aAAO,UAACjB,EAAD,EAAKkB,KAAL;AAAA;AAClC;AACApB,oBAAUU,OAAV,CAAkB,KAAlB,OAA4BS,IAA5B,GAAmC/B,cAAcgC,KAAd,CAAnC,EAA2D,IAA3D,EAAiE,IAAjE,EAAuE,UAAUhB,GAAV,EAAeC,OAAf,EAAwB;AAC7F,gBAAID,GAAJ,EAAS;AAAE,qBAAOF,GAAGE,GAAH,CAAP;AAAgB;AAC3B,gBAAIH,MAAM,EAAV;AACAX,oBAAQW,GAAR,EAAaI,QAAQC,KAArB;AACA;AACA,mBAAOR,QAAQO,OAAR,EAAiBL,SAAjB,EAA4BC,GAA5B,EAAiCC,EAAjC,CAAP;AACD,WAND;AAFkC;AAAA,OAAP;AAU5B;AAXS;AADG,CAAjB","file":"fetch-all.js","sourcesContent":["const toQueryString = require('../helpers/querystring')\n\nlet pushAll = function (target, source) {\n  if (!Array.isArray(source)) {\n    throw new Error('Octokat Error: Calling fetchAll on a request that does not yield an array')\n  }\n  return target.push.apply(target, source)\n}\n\nlet getMore = function (fetchable, requester, acc, cb) {\n  let doStuff = function (err, results) {\n    if (err) { return cb(err) }\n    pushAll(acc, results.items)\n    return getMore(results, requester, acc, cb)\n  }\n\n  if (!fetchNextPage(fetchable, requester, doStuff)) {\n    return cb(null, acc)\n  }\n}\n\n// TODO: HACK to handle camelCase and hypermedia plugins\nvar fetchNextPage = function (obj, requester, cb) {\n  if (typeof obj.next_page_url === 'string') {\n    requester.request('GET', obj.next_page, null, null, cb)\n    return true\n  } else if (obj.next_page) {\n    obj.next_page.fetch(cb)\n    return true\n  } else if (typeof obj.nextPageUrl === 'string') {\n    requester.request('GET', obj.nextPageUrl, null, null, cb)\n    return true\n  } else if (obj.nextPage) {\n    obj.nextPage.fetch(cb)\n    return true\n  } else {\n    return false\n  }\n}\n\n// new class FetchAll\nmodule.exports = {\n  asyncVerbs: {\n    fetchAll (requester, path) { return (cb, query) =>\n      // TODO: Pass in the instance so we can just call fromUrl maybe? and we don't rely on hypermedia to create nextPage\n      requester.request('GET', `${path}${toQueryString(query)}`, null, null, function (err, results) {\n        if (err) { return cb(err) }\n        let acc = []\n        pushAll(acc, results.items)\n        // TODO: handle `items.next_page = string/function`, `items.nextPage = string/function`\n        return getMore(results, requester, acc, cb)\n      }\n      )\n    }\n  }\n}\n"]}