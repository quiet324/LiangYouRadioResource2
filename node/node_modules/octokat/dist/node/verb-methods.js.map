{"version":3,"sources":["../../src/verb-methods.js"],"names":["require","filter","forOwn","extend","toPromise","orig","args","last","length","pop","Promise","resolve","reject","cb","err","val","Error","VerbMethods","plugins","_requester","promisePlugins","promiseCreator","_promisePlugin","_syncVerbs","iterable","verbs","i","plugin","_asyncVerbs","iterable1","asyncVerbs","j","path","obj","url","verbFunc","verbName","makeRequest","originalArgs","data","method","options","request"],"mappings":"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","file":"verb-methods.js","sourcesContent":["const { filter, forOwn, extend } = require('./plus')\n\n// When `origFn` is not passed a callback as the last argument then return a\n// Promise, or error if no Promise can be found (see `plugins/promise/*` for\n// some strategies for loading a Promise implementation)\nlet toPromise = (orig) =>\n  function (...args) {\n    let last = args[args.length - 1]\n    if (typeof last === 'function') { // The last arg is a callback function\n      args.pop()\n      return orig(last, ...args)\n    } else if (typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        let cb = function (err, val) {\n          if (err) { return reject(err) }\n          return resolve(val)\n        }\n        return orig(cb, ...args)\n      })\n    } else {\n      throw new Error('You must specify a callback or have a promise library loaded')\n    }\n  }\n\nclass VerbMethods {\n  constructor (plugins, _requester) {\n    this._requester = _requester\n    if (!this._requester) { throw new Error('Octokat BUG: request is required') }\n\n    let promisePlugins = filter(plugins, ({promiseCreator}) => promiseCreator)\n    if (promisePlugins) {\n      this._promisePlugin = promisePlugins[0]\n    }\n\n    this._syncVerbs = {}\n    let iterable = filter(plugins, ({verbs}) => verbs)\n    for (let i = 0; i < iterable.length; i++) {\n      let plugin = iterable[i]\n      extend(this._syncVerbs, plugin.verbs)\n    }\n    this._asyncVerbs = {}\n    let iterable1 = filter(plugins, ({asyncVerbs}) => asyncVerbs)\n    for (let j = 0; j < iterable1.length; j++) {\n      let plugin = iterable1[j]\n      extend(this._asyncVerbs, plugin.asyncVerbs)\n    }\n  }\n\n  // Injects verb methods onto `obj`\n  injectVerbMethods (path, obj) {\n    if (typeof obj === 'object' || typeof obj === 'function') {\n      obj.url = path // Mostly for testing\n      forOwn(this._syncVerbs, (verbFunc, verbName) => {\n        obj[verbName] = (...args) => {\n          let makeRequest = (cb, ...originalArgs) => {\n            let data, method, options;\n            ({method, path, data, options} = verbFunc(path, ...originalArgs))\n            return this._requester.request(method, path, data, options, cb)\n          }\n          return toPromise(makeRequest)(...args)\n        }\n      }\n      )\n\n      forOwn(this._asyncVerbs, (verbFunc, verbName) => {\n        obj[verbName] = (...args) => {\n          let makeRequest = verbFunc(this._requester, path) // Curried function\n          return toPromise(makeRequest)(...args)\n        }\n      }\n      )\n    } else {\n      // console.warn('BUG: Attempted to injectVerbMethods on a ' + (typeof obj));\n    }\n\n    return obj\n  }\n}\n\nexport { VerbMethods, toPromise }\n"]}