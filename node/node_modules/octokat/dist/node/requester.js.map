{"version":3,"sources":["../../src/requester.js"],"names":["require","filter","map","waterfall","ajax","options","cb","XMLHttpRequest","xhr","dataType","mimeType","__guardFunc__","overrideMimeType","f","open","type","url","data","setRequestHeader","contentType","name","headers","value","onreadystatechange","readyState","__guard__","statusCode","x","status","f1","send","EVENT_ID","module","exports","_instance","_clientOptions","plugins","rootURL","useETags","usePostInsteadOfPatch","userAgent","window","emitter","_emit","_pluginMiddlewareAsync","requestMiddlewareAsync","plugin","bind","_plugins","method","path","isRaw","isBase64","isBoolean","test","acceptHeader","acc","clientOptions","initial","pluginsPlusInitial","concat","err","ajaxConfig","processData","JSON","stringify","undefined","eventId","val","jqXHR","getResponseHeader","rateLimit","parseFloat","rateLimitRemaining","rateLimitReset","emitterRate","remaining","limit","reset","scopes","split","responseText","parse","request","requester","instance","_parseWithContext","Error","json","error","message","func","transform"],"mappings":"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","file":"requester.js","sourcesContent":["const { filter, map, waterfall } = require('./plus')\n\n// Request Function\n// ===============================\n//\n// Generates the actual HTTP requests to GitHub.\n// Handles ETag caching, authentication headers, boolean requests, and paged results\n\n// Simple jQuery.ajax() shim that returns a promise for a xhr object\nlet ajax = function (options, cb) {\n  // Use the browser XMLHttpRequest if it exists. If not, then this is NodeJS\n  // Pull this in for every request so sepia.js has a chance to override `window.XMLHTTPRequest`\n  const XMLHttpRequest = require('./adapters/xhr')\n  let xhr = new XMLHttpRequest()\n  xhr.dataType = options.dataType\n  if (options.mimeType) {\n    __guardFunc__(xhr.overrideMimeType, f => f(options.mimeType))\n  }\n  xhr.open(options.type, options.url)\n\n  if (options.data && options.type !== 'GET') {\n    xhr.setRequestHeader('Content-Type', options.contentType)\n  }\n\n  for (let name in options.headers) {\n    let value = options.headers[name]\n    xhr.setRequestHeader(name, value)\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      __guardFunc__(__guard__(options.statusCode, x => x[xhr.status]), f1 => f1())\n\n      // When disconnected, pass if the status is 0 so the cacheHandler has a chance to return the cached version\n      if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 || xhr.status === 302 || xhr.status === 0) {\n        return cb(null, xhr)\n      } else {\n        return cb(xhr)\n      }\n    }\n  }\n  return xhr.send(options.data)\n}\n\n// # Construct the request function.\n// It contains all the auth credentials passed in to the client constructor\n\nlet EVENT_ID = 0 // counter for the emitter so it is easier to match up requests\n\nmodule.exports = class Requester {\n  constructor (_instance, _clientOptions = {}, plugins) {\n    // Provide an option to override the default URL\n    this._instance = _instance\n    this._clientOptions = _clientOptions\n    if (this._clientOptions.rootURL == null) { this._clientOptions.rootURL = 'https://api.github.com' }\n    if (this._clientOptions.useETags == null) { this._clientOptions.useETags = true }\n    if (this._clientOptions.usePostInsteadOfPatch == null) { this._clientOptions.usePostInsteadOfPatch = false }\n    if (this._clientOptions.userAgent == null) {\n      if (typeof window === 'undefined' || window === null) {\n        // Set the `User-Agent` because it is required and NodeJS\n        // does not send one by default.\n        // See http://developer.github.com/v3/#user-agent-required\n        this._clientOptions.userAgent = 'octokat.js'\n      }\n    }\n\n    // These are updated whenever a request is made (optional)\n    if (typeof this._clientOptions.emitter === 'function') {\n      this._emit = this._clientOptions.emitter\n    }\n\n    this._pluginMiddlewareAsync = map(filter(plugins, ({requestMiddlewareAsync}) => requestMiddlewareAsync), plugin => plugin.requestMiddlewareAsync.bind(plugin)\n    )\n    this._plugins = plugins\n  }\n\n  // HTTP Request Abstraction\n  // =======\n  //\n  request (method, path, data, options = {isRaw: false, isBase64: false, isBoolean: false, contentType: 'application/json'}, cb) {\n    if (typeof options === 'undefined' || options === null) { options = {} }\n    if (options.isRaw == null) { options.isRaw = false }\n    if (options.isBase64 == null) { options.isBase64 = false }\n    if (options.isBoolean == null) { options.isBoolean = false }\n    if (options.contentType == null) { options.contentType = 'application/json' }\n\n    // console.log method, path, data, options, typeof cb\n\n    // Only prefix the path when it does not begin with http.\n    // This is so pagination works (which provides absolute URLs).\n    if (!/^http/.test(path)) { path = `${this._clientOptions.rootURL}${path}` }\n\n    let headers =\n      {'Accept': this._clientOptions.acceptHeader || 'application/json'}\n\n    if (this._clientOptions.userAgent) {\n      headers['User-Agent'] = this._clientOptions.userAgent\n    }\n\n    let acc = {method, path, headers, options, clientOptions: this._clientOptions}\n\n    // To use async.waterfall we need to pass in the initial data (`acc`)\n    // so we create an initial function that just takes a callback\n    let initial = cb => cb(null, acc)\n    let pluginsPlusInitial = [initial].concat(this._pluginMiddlewareAsync)\n\n    return waterfall(pluginsPlusInitial, (err, acc) => {\n      let mimeType\n      if (err) { return cb(err, acc) }\n\n      ({method, headers, mimeType} = acc)\n\n      if (options.isRaw) { headers['Accept'] = 'application/vnd.github.raw' }\n\n      let ajaxConfig = {\n        // Be sure to **not** blow the cache with a random number\n        // (GitHub will respond with 5xx or CORS errors)\n        url: path,\n        type: method,\n        contentType: options.contentType,\n        mimeType,\n        headers,\n\n        processData: false, // Don't convert to QueryString\n        data: (!options.isRaw && data && JSON.stringify(data)) || data,\n        dataType: !options.isRaw ? 'json' : undefined\n      }\n\n      // If the request is a boolean yes/no question GitHub will indicate\n      // via the HTTP Status of 204 (No Content) or 404 instead of a 200.\n      if (options.isBoolean) {\n        ajaxConfig.statusCode = {\n          204: () => cb(null, true),\n          404: () => cb(null, false)\n        }\n      }\n\n      let eventId = ++EVENT_ID\n      __guardFunc__(this._emit, f => f('start', eventId, {method, path, data, options}))\n\n      return ajax(ajaxConfig, (err, val) => {\n        let jqXHR = err || val\n\n        // Fire listeners when the request completes or fails\n        if (this._emit) {\n          if (jqXHR.getResponseHeader('X-RateLimit-Limit')) {\n            let rateLimit = parseFloat(jqXHR.getResponseHeader('X-RateLimit-Limit'))\n            let rateLimitRemaining = parseFloat(jqXHR.getResponseHeader('X-RateLimit-Remaining'))\n            let rateLimitReset = parseFloat(jqXHR.getResponseHeader('X-RateLimit-Reset'))\n            // Reset time is in seconds, not milliseconds\n            // if rateLimitReset\n            //   rateLimitReset = new Date(rateLimitReset * 1000)\n\n            var emitterRate = {\n              remaining: rateLimitRemaining,\n              limit: rateLimit,\n              reset: rateLimitReset\n            }\n\n            if (jqXHR.getResponseHeader('X-OAuth-Scopes')) {\n              emitterRate.scopes = jqXHR.getResponseHeader('X-OAuth-Scopes').split(', ')\n            }\n          }\n          this._emit('end', eventId, {method, path, data, options}, jqXHR.status, emitterRate)\n        }\n\n        if (!err) {\n          // Return the result and Base64 encode it if `options.isBase64` flag is set.\n\n          // Respond with the redirect URL (for archive links)\n          // TODO: implement a `followRedirects` plugin\n          if (jqXHR.status === 302) {\n            return cb(null, jqXHR.getResponseHeader('Location'))\n          // If it was a boolean question and the server responded with 204 ignore.\n          } else if (jqXHR.status !== 204 || !options.isBoolean) {\n            if (jqXHR.responseText && ajaxConfig.dataType === 'json') {\n              data = JSON.parse(jqXHR.responseText)\n            } else {\n              data = jqXHR.responseText\n            }\n\n            acc = {\n              clientOptions: this._clientOptions,\n              plugins: this._plugins,\n              data,\n              options,\n              jqXHR, // for cacheHandler\n              status: jqXHR.status, // cacheHandler changes this\n              request: acc, // Include the request data for plugins like cacheHandler\n              requester: this, // for Hypermedia to generate verb methods\n              instance: this._instance // for Hypermedia to be able to call `.fromUrl`\n            }\n            return this._instance._parseWithContext('', acc, function (err, val) {\n              if (err) { return cb(err, val) }\n              return cb(null, val, jqXHR.status, jqXHR)\n            }\n            )\n          }\n        } else {\n          // Parse the error if one occurs\n\n          // If the request was for a Boolean then a 404 should be treated as a \"false\"\n          if (!options.isBoolean || jqXHR.status !== 404) {\n            err = new Error(jqXHR.responseText)\n            err.status = jqXHR.status\n            if (jqXHR.getResponseHeader('Content-Type') === 'application/json; charset=utf-8') {\n              let json = ''\n              if (jqXHR.responseText) {\n                try {\n                  json = JSON.parse(jqXHR.responseText)\n                } catch (error) {\n                  cb({message: 'Error Parsing Response'})\n                }\n              } else {\n                // In the case of 404 errors, `responseText` is an empty string\n                json = ''\n              }\n              err.json = json\n            }\n            return cb(err)\n          }\n        }\n      }\n      )\n    }\n    )\n  }\n}\n\nfunction __guardFunc__ (func, transform) {\n  return typeof func === 'function' ? transform(func) : undefined\n}\nfunction __guard__ (value, transform) {\n  return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined\n}\n"]}